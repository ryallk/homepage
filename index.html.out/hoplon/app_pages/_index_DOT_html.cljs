(ns hoplon.app-pages._index_DOT_html (:require [javelin.core :refer [->Cell input? cell cell? destroy-cell! lift lens? set-formula! cell-doseq* deref* set-cell! lens formula? alts! dosync* cell-map formula]] [hoplon.core :refer [form audio input menuitem hgroup do! timeout $text base h1 embed h3 body keygen progress main cite on-page-load object i p nav ruby check-val! a menu blockquote img $comment span track data u dl select html thead del eventsource fieldset aside figure figcaption q on! bdi append-child! video address caption dd rp hr tbody table acronym frame applet html-var add-initfn! pre ul dir replace-child! html-time html-map sup dfn sub mark script big button wbr insert-before! strong li dt rtc frameset td tr section th optgroup bust-cache iframe remove-child! legend em kbd spliced article isindex abbr command prerendering? <!-- source output basefont route-cell header datalist tfoot s ins footer title h5 canvas param font div option ensure-kids! summary samp center small style textarea loop-tpl* strike h4 tt head set-attribute! ol details col label rt when-dom h6 link page-load colgroup meter html-meta static-elements text-val! bdo --> b code dialog noframes do-watch noscript safe-nth h2 area br]]) (:require-macros [javelin.core :refer [with-let mx2 dosync cell= set-cell!= prop-cell cell-doseq defc cell-let-1 defc= macroexpand-all mx cell-let]] [hoplon.core :refer [text elem+ cache-key with-timeout defelem+ when-tpl static sexp defelem elem def-values if-tpl cond-tpl with-page-load for-tpl with-dom case-tpl loop-tpl with-interval with-init!]]))

(html
  (head
    (link :href "app.css" :rel "stylesheet"))
  (body
    (h1 "Hello, Hoplon!")))
